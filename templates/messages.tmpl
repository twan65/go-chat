<div class="page-header">
    <h4>メッセージ<small id="room-name"></small></h4>
</div>
  
<div class="panel panel-default">
    <div id="messages" class="panel-body">
    </div>
    <div class="panel-footer">
        <div class="media">
            <div class="media-body">
                <form id="chatbox">
                    <input type="text" class="form-control" id="message" placeholder="メッセージを入力してください">
                </form>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var socket = null;
  
    // チャットルーム参加時の処理
    function enterRoom(roomId) {
        // メッセージを取得し画面に表示
        $.get("/rooms/" + roomId + "/messages", function(data) {
            $("#messages").empty();
            if (data != null) {
                for (var i = data.length - 1; i >= 0; i--) {
                    addMessage(data[i]);
                };
            }
        })
  
        // 接続のsocketを終了し、参加したチャットルームのIDで新しいsocketを生成
        if (socket != null) {
            socket.close();
        }
        socket = new WebSocket(socketEndPoint + roomId);
        socket.onmessage = function(e) {
            addMessage(JSON.parse(e.data));
        }
  
    }
  
    // 画面にメッセージを表示
    function addMessage(message) {
        var img = $("<div>").addClass("media-left").append(
            $("<img>").addClass("img-thumb").css({
                width: 30
            }).attr("src", message.user.avatar_url)
        );
        var msg = $("<div>").addClass("media-body").append(
            $("<h6>").text(message.user.name + " ").addClass("media-heading")
            .append($("<small>").text(new Date(message.created_at).toLocaleString())),
            $("<p>").text(message.content));
  
        $("#messages").append($("<div>").addClass("media").append(img, msg));
    }
  
    // socketの接続が完了していないと完了まで待機後、callbackを実行
    function waitForSocketConnection(socket, callback) {
        setTimeout(
            function() {
                if (socket.readyState === 1) {
                    if (callback != null) {
                        callback();
                    }
                    return;
                } else {
                    console.log("wait for connection...")
                    waitForSocketConnection(socket, callback);
                }
  
           }, 5); // 接続完了まで5msでソケット接続状態を確認
    }
  
    $(function() {
        var msgBox = $("#chatbox input#message");
        $("#chatbox").submit(function() {
            if (!msgBox.val()) return false;
            if (!socket) {
                console.log("Error: There is no socket connection.");
                return false;
            }
            waitForSocketConnection(socket, function() {
                socket.send(JSON.stringify({
                    "room_id": currentRoomId,
                    "content": msgBox.val()
                }));
                msgBox.val("");
            })
            return false;
        });
    });
</script>